c("0",".5","1"), fill = rev(brewer.pal(10, "RdBu")), xpd = NA)
library(lattice)
levelplot(temperature[, , 1])
?levelplot
map(database = 'world', add = T, lwd=2)
a = temperature[, , 1]
temperature[, , 1]
a
a
colnames(a) <- lon
dim(a)
length(lon)
colnames(a) <- lat
colnames(a) <- rev(lat)
rownames(a) <- lon
levelplot(a )
map(database = 'world', add = T, lwd=2)
contour(a)
filled.contour(a)
map(database = 'world', add = T, lwd=2)
mapplot(a)
filled.contour(lon, lat, a)
filled.contour(lon, rev(lat), a)
map(database = 'world', add = T, lwd=2)
levelplot(a )
mapplot(a)
m <- map(database = 'world', plot = FALSE)
xyplot(y ~ x, m, type = "l", aspect = "iso",
par.settings = list(axis.line = list(col = "transparent")))
xyplot(y ~ x, m, type = "l", aspect = "iso",
par.settings = list(axis.line = list(col = "transparent")), add=T)
levelplot(a )
xyplot(y ~ x, m, type = "l", aspect = "iso",
par.settings = list(axis.line = list(col = "transparent")), add=T)
b = melt(a)
library(tidyverse)
b = melt(a)
library(reshape2)
b = melt(a)
b
?melt
names(b) = c("lon", "lat", "temp")
b
names(b)
ggplot(data = b, aes(x = lon, y = lat, fill = temp)) +
geom_raster(interpolate = TRUE) +
scale_fill_gradientn(colours = rev(rainbow(7)), na.value = NA) +
theme_bw() +
coord_fixed(1.3)
ggplot(data = b, aes(x = lon, y = lat, fill = temp)) +
geom_raster(interpolate = TRUE) +
scale_fill_gradientn(colours = rev(rainbow(7)), na.value = NA) +
theme_bw()
ggplot(data = b, aes(x = lon, y = lat, fill = temp)) +
geom_raster(interpolate = TRUE) +
scale_fill_gradientn(colours = rev(rainbow(7)), na.value = NA) +
theme_bw() +
coord_fixed(1.3) ++
borders("world",fill="black",colour="black")
ggplot(data = b, aes(x = lon, y = lat, fill = temp)) +
geom_raster(interpolate = TRUE) +
scale_fill_gradientn(colours = rev(rainbow(7)), na.value = NA) +
theme_bw() +
coord_fixed(1.3) +
borders("world",fill="black",colour="black")
countryoutline <- get_map(location = "world")
library(ggmap)
countryoutline <- get_map(location = "world")
ggplot(data = b, aes(x = lon, y = lat, fill = temp)) +
geom_raster(interpolate = TRUE) +
scale_fill_gradientn(colours = rev(rainbow(7)), na.value = NA) +
theme_bw() +
coord_fixed(1.3) +
borders(data=countryoutline,fill="black",colour="black")
ggplot(data = b, aes(x = lon, y = lat, fill = temp)) +
geom_raster(interpolate = TRUE) +
scale_fill_gradientn(colours = rev(rainbow(7)), na.value = NA) +
theme_bw() +
coord_fixed(1.3) +
borders(data=countryoutline, colour="black")
ggmap(countryoutline)
countryoutline <- get_map("world")
ggplot(data = b, aes(x = lon, y = lat, fill = temp)) +
geom_raster(interpolate = TRUE) +
scale_fill_gradientn(colours = rev(rainbow(7)), na.value = NA) +
theme_bw() +
coord_fixed(1.3) +
geom_map(data=countryoutline, colour="black")
ggplot(data = b, aes(x = lon, y = lat, fill = temp)) +
geom_raster(interpolate = TRUE) +
scale_fill_gradientn(colours = rev(rainbow(7)), na.value = NA) +
theme_bw() +
coord_fixed(1.3) +
borders(data=countryoutline, colour="black")
ggmap(countryoutline)
?Rgshhs
??Rgshhs
library(maptools)
?Rgshhs
install.packages("Rgshhs")
install.packages("maptools")
library(maptools)
?Rgshhs
c = Rgshhs()
library(mapdata)
c = map("worldHires")
c = map(database="worldHires")
c = map(database="worldHires", plot=F)
image(lon, rev(lat), temperature[, , 1], col = rev(brewer.pal(10, "RdBu")), main=paste0(tempname$value, '\n', month.name[1]), xlab="", ylab="")
map(database = 'world', add = T, lwd=2)
library(maps)          # For World map
image(lon, rev(lat), temperature[, , 1], col = rev(brewer.pal(10, "RdBu")), main=paste0(tempname$value, '\n', month.name[1]), xlab="", ylab="")
map(database = 'world', add = T, lwd=2)
map(database = 'world', add = T, lwd=2)
ggplot(data = b, aes(x = lon, y = lat, fill = temp)) +
geom_raster(interpolate = TRUE) +
scale_fill_gradientn(colours = rev(rainbow(7)), na.value = NA) +
theme_bw() +
coord_fixed(1.3)
image(lon, rev(lat), temperature[, , 1], col = rev(brewer.pal(10, "RdBu")), main=paste0(tempname$value, '\n', month.name[1]), xlab="", ylab="")
map(database = 'world', add = T, lwd=2)
image.plot(lon, rev(lat), temperature[, , 1], col = rev(brewer.pal(10, "RdBu")), main=paste0(tempname$value, '\n', month.name[1]), xlab="", ylab="")
library(fields)
image.plot(lon, rev(lat), temperature[, , 1], col = rev(brewer.pal(10, "RdBu")), main=paste0(tempname$value, '\n', month.name[1]), xlab="", ylab="")
image.plot(lon, rev(lat), temperature[, , 1])
library(ncdf4)
ncfile <- nc_open('/home/murray/Downloads/absolute.nc')
lat=ncvar_get(ncfile, 'lat')
lon=ncvar_get(ncfile,'lon')
time=ncvar_get(ncfile, "time")
temperature=ncvar_get(ncfile,'tem')
tempname=ncatt_get(ncfile, "tem", "long_name")
tempunits=ncatt_get(ncfile, "tem", "units")
nc_close(ncfile)
library(RColorBrewer)  # For colors
library(maps)          # For World map
image(lon, rev(lat), temperature[, , 1], col = rev(brewer.pal(10, "RdBu")), main=paste0(tempname$value, '\n', month.name[1]), xlab="", ylab="")
map(database = 'world', add = T, lwd=2)
library(lattice)
a = temperature[, , 1]
colnames(a) <- rev(lat)
rownames(a) <- lon
levelplot(a )
filled.contour(lon, rev(lat), a)
mapplot(a)
m <- map(database = 'world', plot = FALSE)
xyplot(y ~ x, m, type = "l", aspect = "iso",
par.settings = list(axis.line = list(col = "transparent")), add=T)
library(tidyverse)
library(reshape2)
library(ggmap)
b = melt(a)
names(b) = c("lon", "lat", "temp")
countryoutline <- get_map("world")
ggplot(data = b, aes(x = lon, y = lat, fill = temp)) +
geom_raster(interpolate = TRUE) +
scale_fill_gradientn(colours = rev(rainbow(7)), na.value = NA) +
theme_bw() +
coord_fixed(1.3)
library(fields)
image.plot(lon, rev(lat), temperature[, , 1], col = rev(brewer.pal(10, "RdBu")), main=paste0(tempname$value, '\n', month.name[1]), xlab="", ylab="")
map(database = 'world', add = T, lwd=2)
library(ncdf4)
ncfile <- nc_open('/home/murray/Downloads/absolute.nc')
lat=ncvar_get(ncfile, 'lat')
lon=ncvar_get(ncfile,'lon')
time=ncvar_get(ncfile, "time")
temperature=ncvar_get(ncfile,'tem')
tempname=ncatt_get(ncfile, "tem", "long_name")
tempunits=ncatt_get(ncfile, "tem", "units")
nc_close(ncfile)
library(RColorBrewer)  # For colors
library(maps)          # For World map
image(lon, rev(lat), temperature[, , 1], col = rev(brewer.pal(10, "RdBu")), main=paste0(tempname$value, '\n', month.name[1]), xlab="", ylab="")
map(database = 'world', add = T, lwd=2)
library(fields)
image.plot(lon, rev(lat), temperature[, , 1], col = rev(brewer.pal(10, "RdBu")), main=paste0(tempname$value, '\n', month.name[1]), xlab="", ylab="")
map(database = 'world', add = T, lwd=2)
par(mar=c(5.1,4.1,4.1,2.1)
image.plot(lon, rev(lat), temperature[, , 1], col = rev(brewer.pal(10, "RdBu")), main=paste0(tempname$value, '\n', month.name[1]), xlab="", ylab="")
map(database = 'world', add = T, lwd=2)
par(mar=c(5.1,4.1,4.1,2.1))
image.plot(lon, rev(lat), temperature[, , 1], col = rev(brewer.pal(10, "RdBu")), main=paste0(tempname$value, '\n', month.name[1]), xlab="", ylab="")
map(database = 'world', add = T, lwd=2)
image.plot(lon, rev(lat), temperature[, , 1], col = rev(brewer.pal(10, "RdBu")))
map(database = 'world', add = T, lwd=2)
par(mar=c(5.1,4.1,4.1,2.1))
image.plot(lon, rev(lat), temperature[, , 1], col = rev(brewer.pal(10, "RdBu")))
map(database = 'world', add = T, lwd=2)
par(mar=c(1,1,1,1))
image.plot(lon, rev(lat), temperature[, , 1], col = rev(brewer.pal(10, "RdBu")))
map(database = 'world', add = T, lwd=2)
par(mar=c(2,2,2,2))
image.plot(lon, rev(lat), temperature[, , 1], col = rev(brewer.pal(10, "RdBu")))
map(database = 'world', add = T, lwd=2)
par(mar=c(3,3,3,3))
image.plot(lon, rev(lat), temperature[, , 1], col = rev(brewer.pal(10, "RdBu")))
map(database = 'world', add = T, lwd=2)
n <- 100
d <- data.frame(lon=rnorm(n,5),lat=rnorm(n,55))
g <- ggplot(d,aes(lon,lat))+geom_point(col="red",pch=16)+
borders("world",fill="black",colour="black")
library(tidyverse)
library(reshape2)
library(ggmap)
g <- ggplot(d,aes(lon,lat))+geom_point(col="red",pch=16)+
borders("world",fill="black",colour="black")
plot(g)
g <- ggplot(d,aes(lon1,lat1))+geom_point(col="red",pch=16)+
borders("world",fill="black",colour="black")
d <- data.frame(lon1=rnorm(n,5),lat1=rnorm(n,55))
g <- ggplot(d,aes(lon1,lat1))+geom_point(col="red",pch=16)+
borders("world",fill="black",colour="black")
g <- ggplot(d,aes(lon1,lat1))+geom_point(col="red",pch=16)
plot(g)
library(maps)          # For World map
g <- ggplot(d,aes(lon1,lat1))+geom_point(col="red",pch=16)+
borders("world",fill="black",colour="black")
g <- ggplot(d,aes(lon1,lat1))+geom_point(col="red",pch=16) + borders(database="world")
ggplot(d,aes(lon1,lat1))+geom_point(col="red",pch=16) + borders(database="world")
str(d)
ggplot(d,aes(lon1,lat1))+geom_point(col="red",pch=16) + borders(database="world",xlim = c(-130, -60), ylim = c(20, 50))
ggplot(d,aes(lon1,lat1))+borders(database="world",xlim = c(-130, -60), ylim = c(20, 50))
ia <- map_data("county", "iowa")
ia <- map_data("county", "iowa")
1
2
4+3
ia <- map_data("county", "iowa")
ia <- map_data("county", "iowa")
library(ggplot2)
ia <- map_data("county", "iowa")
mid_range <- function(x) mean(range(x))
seats <- plyr::ddply(ia, "subregion", plyr::colwise(mid_range, c("lat", "long")))
ggplot(ia, aes(long, lat)) +
geom_polygon(aes(group = group), fill = NA, colour = "grey60") +
geom_text(aes(label = subregion), data = seats, size = 2, angle = 45)
library(maps)
library(mapdata)
n <- 50
dat <- data.frame(lon=runif(n,7,10),
lat=runif(n,55,60))
ggplot(dat,aes(x=lon,y=lat))+geom_point(col="red",pch=16)
ggplot(dat,aes(x=lon,y=lat))+geom_point(col="red",pch=16) +borders()
library(ncdf4)
ncfile <- nc_open('/home/murray/Downloads/absolute.nc')
lat=ncvar_get(ncfile, 'lat')
lon=ncvar_get(ncfile,'lon')
time=ncvar_get(ncfile, "time")
temperature=ncvar_get(ncfile,'tem')
tempname=ncatt_get(ncfile, "tem", "long_name")
tempunits=ncatt_get(ncfile, "tem", "units")
nc_close(ncfile)
library(reshape2)
b = melt(a)
a = temperature[, , 1]
b = melt(a)
names(b) = c("lon", "lat", "temp")
ggplot(data = b, aes(x = lon, y = lat, fill = temp)) +
geom_raster(interpolate = TRUE) +
scale_fill_gradientn(colours = rev(rainbow(7)), na.value = NA) +
theme_bw() +
coord_fixed(1.3)
ggplot(data = b, aes(x = lon, y = lat, fill = temp)) +
geom_raster(interpolate = TRUE) +
scale_fill_gradientn(colours = rev(rainbow(7)), na.value = NA) +
theme_bw() +
coord_fixed(1.3) + borders()
library(RColorBrewer)  # For colors
library(maps)          # For World map
image(lon, rev(lat), temperature[, , 1], col = rev(brewer.pal(10, "RdBu")), main=paste0(tempname$value, '\n', month.name[1]), xlab="", ylab="")
map(database = 'world', add = T, lwd=2)
a = temperature[, , 1]
a
colnames(a) <- rev(lat)
rownames(a) <- lon
b = melt(a)
names(b) = c("lon", "lat", "temp")
ggplot(data = b, aes(x = lon, y = lat, fill = temp)) +
geom_raster(interpolate = TRUE) +
scale_fill_gradientn(colours = rev(rainbow(7)), na.value = NA) +
theme_bw() +
coord_fixed(1.3) + borders()
library(fields)       # For image.plot
image.plot(lon, rev(lat), temperature[, , 1], col = rev(brewer.pal(10, "RdBu")))
map(database = 'world', add = T, lwd=2)
install.packages("ncdf4")
ncfile <- nc_open('2016722131556EnsembleGPP_MR_1deg.nc')
library("ncdf4")
ncfile <- nc_open('2016722131556EnsembleGPP_MR_1deg.nc')
print(ncfile)
list.files()
setwd("~/Documents/scratch/R_netcdf")
list.files()
ncfile <- nc_open("lpj-guess_agmerra_fullharm_yield_mai_global_annual_1980_2010_C360_T0_W0_N60_A0_1deg.nc4")
print(ncfile)
lat=ncvar_get(ncfile, 'lat')
lon=ncvar_get(ncfile,'lon')
time=ncvar_get(ncfile, "time")
temperature=ncvar_get(ncfile,'tem')
lat=ncvar_get(ncfile, 'lat')
lon=ncvar_get(ncfile,'lon')
time=ncvar_get(ncfile, "time")
temperature=ncvar_get(ncfile,'temp')
lat=ncvar_get(ncfile, 'lat')
lon=ncvar_get(ncfile,'lon')
time=ncvar_get(ncfile, "time")
yield = ncvar_get(ncfile, 'yield_mai')
yield_name=ncatt_get(ncfile, "yield_mai", "long_name")
yield_units=ncatt_get(ncfile, "yield_mai", "units")
yield_name
yield_units
yield_name
yield_units
print(yield_units)
yield_name=ncatt_get(ncfile, "yield_mai", "long_name")
print(yield_name)
yield_units=ncatt_get(ncfile, "yield_mai", "units")
print(yield_units)
yield_fillvalue <- ncatt_get(ncfile,"yield_mai","_FillValue")
print(yield_fillvalue )
length(yield)
length(yield, time)
length(c(yield, time))
length(lat)
length(lon)
length(time)
length(yield)
ncfile <- nc_open('2016722131556EnsembleGPP_MR_1deg.nc')
print(ncfile)
lat=ncvar_get(ncfile, 'lat')
lon=ncvar_get(ncfile,'lon')
time=ncvar_get(ncfile, "time")
gpp = ncvar_get(ncfile, 'gpp')
length(lat)
length(lon)
length(time)
length(gpp)
gpp_name=ncatt_get(ncfile, "gpp_mai", "long_name")
gpp_name=ncatt_get(ncfile, "gpp", "long_name")
print(gpp_name)
gpp_units=ncatt_get(ncfile, "gpp", "units")
print(gpp_units)
gpp_fillvalue <- ncatt_get(ncfile,"gpp","_FillValue")
print(gpp_fillvalue)
dim(gpp)
first_gpp_slice = gpp[,,1]
image(first_gpp_slice)
flipped_first_gpp_slice = gpp[,max(lat):1,1]
image(first_gpp_slice)
image(flipped_first_gpp_slice)
flipped_first_gpp_slice = gpp[,max(lon):1,1]
image(flipped_first_gpp_slice)
print(lon)
print(ncfile)
flipped_first_gpp_slice = gpp[,2*max(lat):1,1]
flipped_first_gpp_slice = gpp[,2*max(lat):1,1]
image(flipped_first_gpp_slice)
print(lon)
flipped_first_gpp_slice = gpp[,180:1,1]
image(flipped_first_gpp_slice)
flipped_first_gpp_slice = gpp[,180:1,100]
image(flipped_first_gpp_slice)
flipped_first_gpp_slice = gpp[,180:1,1]
image(flipped_first_gpp_slice)
flipped_first_gpp_slice = gpp[,180:1,100]
image(flipped_first_gpp_slice)
flipped_first_gpp_slice = gpp[,180:1,1]
image(flipped_first_gpp_slice)
flipped_first_gpp_slice = gpp[,180:1,100]
image(flipped_first_gpp_slice)
flipped_first_gpp_slice = gpp[,180:1,1]
image(flipped_first_gpp_slice)
library("fields")
image.plot(lon, rev(lat), flipped_first_gpp_slice, col = rev(brewer.pal(10, "RdBu")))
image.plot(lon, rev(lat), flipped_first_gpp_slice)
image.plot(lon, lat, flipped_first_gpp_slice)
map(database = 'world', add = T, lwd=2)
# install.packages("fields")
library("fields")
image.plot(lon, lat, flipped_first_gpp_slice)
map(database = 'world', add = T, lwd=2)
image.plot(lon, lat, flipped_first_gpp_slice)
map(database = 'world', add = T, lwd=2)
library("RColorBrewer")
image.plot(lon, lat, flipped_first_gpp_slice, col = rev(brewer.pal(10, "RdBu"))
map(database = 'world', add = T, lwd=2)
# install.packages("RColorBrewer")
library("RColorBrewer")
image.plot(lon, lat, flipped_first_gpp_slice, col = rev(brewer.pal(10, "RdBu")))
map(database = 'world', add = T, lwd=2)
image.plot(lon, lat, flipped_first_gpp_slice, col = rev(brewer.pal(10, "YlGnBl")))
image.plot(lon, lat, flipped_first_gpp_slice, col = rev(brewer.pal(10, "YlGnBr")))
image.plot(lon, lat, flipped_first_gpp_slice, col = rev(brewer.pal(10, "YlGnBu")))
map(database = 'world', add = T, lwd=2)
image.plot(lon, lat, flipped_first_gpp_slice, col = rev(brewer.pal("YlGnBu")))
image.plot(lon, lat, flipped_first_gpp_slice, col = rev(brewer.pal(9,"YlGnBu")))
map(database = 'world', add = T, lwd=2)
image.plot(lon, lat, flipped_first_gpp_slice, col = rev(colorRampPalette(9,"YlGnBu")))
image.plot(lon, lat, flipped_first_gpp_slice, col = rev(brewer.pal(9,"YlGnBu")))
map(database = 'world', add = T, lwd=2)
print(gpp_name)
image.plot(lon, lat, flipped_first_gpp_slice, col = rev(brewer.pal(9,"YlGnBu")), xlab="", ylab="", main=gpp_name$value)
map(database = 'world', add = T, lwd=2)
gpp[gpp==gpp_fillvalue$value] <- NA
first_gpp_slice = gpp[,,1]
image(first_gpp_slice)
flipped_first_gpp_slice = gpp[,180:1,1]
image(flipped_first_gpp_slice)
# install.packages("fields")
library("fields")
image.plot(lon, lat, flipped_first_gpp_slice)
image.plot(lon, lat, flipped_first_gpp_slice)
map(database = 'world', add = T, lwd=2)
# install.packages("RColorBrewer")
library("RColorBrewer")
image.plot(lon, lat, flipped_first_gpp_slice, col = rev(brewer.pal(10, "RdBu")))
map(database = 'world', add = T, lwd=2)
image.plot(lon, lat, flipped_first_gpp_slice, col = rev(brewer.pal(9,"YlGnBu")))
map(database = 'world', add = T, lwd=2)
image.plot(lon, lat, flipped_first_gpp_slice, col = rev(brewer.pal(9,"YlGnBu")), xlab="", ylab="", main=gpp_name$value)
map(database = 'world', add = T, lwd=2)
image.plot(lon, lat, flipped_first_gpp_slice, col = rev(colorRampPalette(brewer.pal(9,"YlGnBu"))), xlab="", ylab="", main=gpp_name$value)
image.plot(lon, lat, flipped_first_gpp_slice, col = rev(colorRampPalette(brewer.pal(9,"YlGnBu"),100)), xlab="", ylab="", main=gpp_name$value)
image.plot(lon, lat, flipped_first_gpp_slice, col = rev(brewer.pal(9,"YlGnBu")), xlab="", ylab="", main=gpp_name$value)
map(database = 'world', add = T, lwd=2)
print(gpp_units)
image.plot(lon, lat, flipped_first_gpp_slice, col = rev(brewer.pal(9,"YlGnBu")), xlab="", ylab="", main=gpp_name$value, legend.lab=gpp_units$value)
map(database = 'world', add = T, lwd=2)
image.plot(lon, lat, flipped_first_gpp_slice, col = rev(brewer.pal(9,"YlGnBu")), xlab="", ylab="", main=gpp_name$value, legend.lab=gpp_units$value, legend.mar=6)
image.plot(lon, lat, flipped_first_gpp_slice, col = rev(brewer.pal(9,"YlGnBu")), xlab="", ylab="", main=gpp_name$value, legend.lab=gpp_units$value, legend.mar=10)
image.plot(lon, lat, flipped_first_gpp_slice, col = rev(brewer.pal(9,"YlGnBu")), xlab="", ylab="", main=gpp_name$value, legend.lab=gpp_units$value, legend.mar=20)
image.plot(lon, lat, flipped_first_gpp_slice, col = rev(brewer.pal(9,"YlGnBu")), xlab="", ylab="", main=gpp_name$value, legend.lab=gpp_units$value, legend.mar=20)
map(database = 'world', add = T, lwd=2)
image.plot(lon, lat, flipped_first_gpp_slice, col = rev(brewer.pal(9,"YlGnBu")), xlab="", ylab="", main=gpp_name$value, legend.lab=gpp_units$value)
map(database = 'world', add = T, lwd=2)
image.plot(lon, lat, flipped_first_gpp_slice, col = rev(brewer.pal(9,"YlGnBu")), xlab="", ylab="", main=gpp_name$value, legend.lab=gpp_units$value, legend.line=2)
image.plot(lon, lat, flipped_first_gpp_slice, col = rev(brewer.pal(9,"YlGnBu")), xlab="", ylab="", main=gpp_name$value, legend.lab=gpp_units$value, legend.line=10)
image.plot(lon, lat, flipped_first_gpp_slice, col = rev(brewer.pal(9,"YlGnBu")), xlab="", ylab="", main=gpp_name$value, legend.lab=gpp_units$value, legend.line=5)
image.plot(lon, lat, flipped_first_gpp_slice, col = rev(brewer.pal(9,"YlGnBu")), xlab="", ylab="", main=gpp_name$value, legend.lab=gpp_units$value, legend.line=2)
image.plot(lon, lat, flipped_first_gpp_slice, col = rev(brewer.pal(9,"YlGnBu")), xlab="", ylab="", main=gpp_name$value, legend.lab=gpp_units$value, legend.line=2.2)
image.plot(lon, lat, flipped_first_gpp_slice, col = rev(brewer.pal(9,"YlGnBu")), xlab="", ylab="", main=gpp_name$value, legend.lab=gpp_units$value, legend.line=3)
image.plot(lon, lat, flipped_first_gpp_slice, col = rev(brewer.pal(9,"YlGnBu")), xlab="", ylab="", main=gpp_name$value, legend.lab=gpp_units$value, legend.line=3.2)
image.plot(lon, lat, flipped_first_gpp_slice, col = rev(brewer.pal(9,"YlGnBu")), xlab="", ylab="", main=gpp_name$value, legend.lab=gpp_units$value, legend.line=3.2, legend.mar=6)
image.plot(lon, lat, flipped_first_gpp_slice, col = rev(brewer.pal(9,"YlGnBu")), xlab="", ylab="", main=gpp_name$value, legend.lab=gpp_units$value, legend.line=3.5, legend.mar=6)
image.plot(lon, lat, flipped_first_gpp_slice, col = rev(brewer.pal(9,"YlGnBu")), xlab="", ylab="", main=gpp_name$value, legend.lab=gpp_units$value, legend.line=4, legend.mar=6)
image.plot(lon, lat, flipped_first_gpp_slice, col = rev(brewer.pal(9,"YlGnBu")), xlab="", ylab="", main=gpp_name$value, legend.lab=gpp_units$value, legend.line=4, legend.mar=6.5)
image.plot(lon, lat, flipped_first_gpp_slice, col = rev(brewer.pal(9,"YlGnBu")), xlab="", ylab="", main=gpp_name$value, legend.lab=gpp_units$value, legend.line=4, legend.mar=7)
image.plot(lon, lat, flipped_first_gpp_slice, col = rev(brewer.pal(9,"YlGnBu")), xlab="", ylab="", main=gpp_name$value, legend.lab=gpp_units$value, legend.line=4, legend.mar=7)
map(database = 'world', add = T, lwd=2)
par(mar(4,4,4,4))
par(mar=c(4,4,4,4))
image.plot(lon, lat, flipped_first_gpp_slice, col = rev(brewer.pal(9,"YlGnBu")), xlab="", ylab="", main=gpp_name$value, legend.lab=gpp_units$value, legend.line=4, legend.mar=7)
map(database = 'world', add = T, lwd=2)
par(mar=c(6,6,6,6))
image.plot(lon, lat, flipped_first_gpp_slice, col = rev(brewer.pal(9,"YlGnBu")), xlab="", ylab="", main=gpp_name$value, legend.lab=gpp_units$value, legend.line=4, legend.mar=7)
map(database = 'world', add = T, lwd=2)
par(mar=c(8,8,8,8))
image.plot(lon, lat, flipped_first_gpp_slice, col = rev(brewer.pal(9,"YlGnBu")), xlab="", ylab="", main=gpp_name$value, legend.lab=gpp_units$value, legend.line=4, legend.mar=7)
map(database = 'world', add = T, lwd=2)
par(mar=c(3,3,3,3))
image.plot(lon, lat, flipped_first_gpp_slice, col = rev(brewer.pal(9,"YlGnBu")), xlab="", ylab="", main=gpp_name$value, legend.lab=gpp_units$value, legend.line=4, legend.mar=7)
map(database = 'world', add = T, lwd=2)
par(mar=c(4,4,4,4))
image.plot(lon, lat, flipped_first_gpp_slice, col = rev(brewer.pal(9,"YlGnBu")), xlab="", ylab="", main=gpp_name$value, legend.lab=gpp_units$value, legend.line=4, legend.mar=7)
map(database = 'world', add = T, lwd=2)
par(mar=c(3,3,3,3))
image.plot(lon, lat, flipped_first_gpp_slice, col = rev(brewer.pal(9,"YlGnBu")), xlab="", ylab="", main=gpp_name$value, legend.lab=gpp_units$value, legend.line=4, legend.mar=7)
map(database = 'world', add = T, lwd=2)
library(viridis)
image.plot(lon, lat, flipped_first_gpp_slice, col=viridis, xlab="", ylab="", main=gpp_name$value, legend.lab=gpp_units$value, legend.line=4, legend.mar=7)
image.plot(lon, lat, flipped_first_gpp_slice, col=viridis(256), xlab="", ylab="", main=gpp_name$value, legend.lab=gpp_units$value, legend.line=4, legend.mar=7)
# install.packages("viridis")
library(viridis)
par(mar=c(3,3,3,3))
image.plot(lon, lat, flipped_first_gpp_slice, col=viridis(256), xlab="", ylab="", main=gpp_name$value, legend.lab=gpp_units$value, legend.line=4, legend.mar=7)
map(database = 'world', add = T, lwd=2)
# install.packages("viridis")
library(viridis)
par(mar=c(3,3,3,3))
image.plot(lon, lat, flipped_first_gpp_slice, col=inferno(256), xlab="", ylab="", main=gpp_name$value, legend.lab=gpp_units$value, legend.line=4, legend.mar=7)
map(database = 'world', add = T, lwd=2)
# install.packages("viridis")
library(viridis)
par(mar=c(3,3,3,3))
image.plot(lon, lat, flipped_first_gpp_slice, col=plasma(256), xlab="", ylab="", main=gpp_name$value, legend.lab=gpp_units$value, legend.line=4, legend.mar=7)
map(database = 'world', add = T, lwd=2)
png("gpp_map.png", width=6, height=4, units = 'in', res = 300)
par(mar=c(3,3,3,3))
image.plot(lon, lat, flipped_first_gpp_slice, col=plasma(256), xlab="", ylab="", main=gpp_name$value, legend.lab=gpp_units$value, legend.line=4, legend.mar=7)
map(database = 'world', add = T, lwd=2)
dev.off()
png("gpp_map.png", width=8, height=4, units = 'in', res = 300)
par(mar=c(3,3,3,3))
image.plot(lon, lat, flipped_first_gpp_slice, col=plasma(256), xlab="", ylab="", main=gpp_name$value, legend.lab=gpp_units$value, legend.line=4, legend.mar=7)
map(database = 'world', add = T, lwd=2)
dev.off()
png("gpp_map.png", width=10, height=5, units = 'in', res = 300)
par(mar=c(3,3,3,3))
image.plot(lon, lat, flipped_first_gpp_slice, col=plasma(256), xlab="", ylab="", main=gpp_name$value, legend.lab=gpp_units$value, legend.line=4, legend.mar=7)
map(database = 'world', add = T, lwd=2)
dev.off()
gpp1 = gpp[,180:1,1]
gpp200 = gpp[,180:1,200]
gpp_difference = gpp200 - gpp1
image.plot(lon, lat, gpp_difference)
str(gpp1)
str(matrix(1:9, ncol = 3))
gpp1 = gpp[,180:1,1]
gpp200 = gpp[,180:1,200]
gpp_difference = gpp200 - gpp1
image.plot(lon, lat, gpp_difference)
